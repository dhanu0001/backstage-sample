{"version":3,"file":"material-ui.cjs.production.min.js","sources":["../src/IconButton/IconButton.tsx","../src/Templates/Templates.ts","../src/ArrayFieldItemTemplate/ArrayFieldItemTemplate.tsx","../src/ArrayFieldTemplate/ArrayFieldTemplate.tsx","../src/BaseInputTemplate/BaseInputTemplate.tsx","../src/AddButton/AddButton.tsx","../src/SubmitButton/SubmitButton.tsx","../src/DescriptionField/DescriptionField.tsx","../src/ErrorList/ErrorList.tsx","../src/FieldErrorTemplate/FieldErrorTemplate.tsx","../src/FieldHelpTemplate/FieldHelpTemplate.tsx","../src/FieldTemplate/FieldTemplate.tsx","../src/ObjectFieldTemplate/ObjectFieldTemplate.tsx","../src/TitleField/TitleField.tsx","../src/WrapIfAdditionalTemplate/WrapIfAdditionalTemplate.tsx","../src/Widgets/Widgets.ts","../src/CheckboxWidget/CheckboxWidget.tsx","../src/CheckboxesWidget/CheckboxesWidget.tsx","../src/DateWidget/DateWidget.tsx","../src/DateTimeWidget/DateTimeWidget.tsx","../src/RadioWidget/RadioWidget.tsx","../src/RangeWidget/RangeWidget.tsx","../src/SelectWidget/SelectWidget.tsx","../src/TextareaWidget/TextareaWidget.tsx","../src/Theme/Theme.tsx","../src/MuiForm/MuiForm.tsx"],"sourcesContent":["import React from \"react\";\nimport IconButton, {\n  IconButtonProps as MuiIconButtonProps,\n} from \"@material-ui/core/IconButton\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport RemoveIcon from \"@material-ui/icons/Remove\";\nimport { IconButtonProps } from \"@rjsf/utils\";\n\nexport default function MuiIconButton(props: IconButtonProps) {\n  const { icon, color, uiSchema, ...otherProps } = props;\n  return (\n    <IconButton\n      {...otherProps}\n      size=\"small\"\n      color={color as MuiIconButtonProps[\"color\"]}\n    >\n      {icon}\n    </IconButton>\n  );\n}\n\nexport function MoveDownButton(props: IconButtonProps) {\n  return (\n    <MuiIconButton\n      title=\"Move down\"\n      {...props}\n      icon={<ArrowDownwardIcon fontSize=\"small\" />}\n    />\n  );\n}\n\nexport function MoveUpButton(props: IconButtonProps) {\n  return (\n    <MuiIconButton\n      title=\"Move up\"\n      {...props}\n      icon={<ArrowUpwardIcon fontSize=\"small\" />}\n    />\n  );\n}\n\nexport function RemoveButton(props: IconButtonProps) {\n  const { iconType, ...otherProps } = props;\n  return (\n    <MuiIconButton\n      title=\"Remove\"\n      {...otherProps}\n      color=\"secondary\"\n      icon={\n        <RemoveIcon fontSize={iconType === \"default\" ? \"medium\" : \"small\"} />\n      }\n    />\n  );\n}\n","import AddButton from \"../AddButton\";\nimport ArrayFieldItemTemplate from \"../ArrayFieldItemTemplate\";\nimport ArrayFieldTemplate from \"../ArrayFieldTemplate\";\nimport BaseInputTemplate from \"../BaseInputTemplate\";\nimport DescriptionField from \"../DescriptionField\";\nimport ErrorList from \"../ErrorList\";\nimport { MoveDownButton, MoveUpButton, RemoveButton } from \"../IconButton\";\nimport FieldErrorTemplate from \"../FieldErrorTemplate\";\nimport FieldHelpTemplate from \"../FieldHelpTemplate\";\nimport FieldTemplate from \"../FieldTemplate\";\nimport ObjectFieldTemplate from \"../ObjectFieldTemplate\";\nimport SubmitButton from \"../SubmitButton\";\nimport TitleField from \"../TitleField\";\nimport WrapIfAdditionalTemplate from \"../WrapIfAdditionalTemplate\";\n\nexport default {\n  ArrayFieldItemTemplate,\n  ArrayFieldTemplate,\n  BaseInputTemplate,\n  ButtonTemplates: {\n    AddButton,\n    MoveDownButton,\n    MoveUpButton,\n    RemoveButton,\n    SubmitButton,\n  },\n  DescriptionFieldTemplate: DescriptionField,\n  ErrorListTemplate: ErrorList,\n  FieldErrorTemplate,\n  FieldHelpTemplate,\n  FieldTemplate,\n  ObjectFieldTemplate,\n  TitleFieldTemplate: TitleField,\n  WrapIfAdditionalTemplate,\n};\n","import React, { CSSProperties } from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { ArrayFieldTemplateItemType } from \"@rjsf/utils\";\n\nconst ArrayFieldItemTemplate = (props: ArrayFieldTemplateItemType) => {\n  const {\n    children,\n    disabled,\n    hasToolbar,\n    hasMoveDown,\n    hasMoveUp,\n    hasRemove,\n    index,\n    onDropIndexClick,\n    onReorderClick,\n    readonly,\n    uiSchema,\n    registry,\n  } = props;\n  const { MoveDownButton, MoveUpButton, RemoveButton } =\n    registry.templates.ButtonTemplates;\n  const btnStyle: CSSProperties = {\n    flex: 1,\n    paddingLeft: 6,\n    paddingRight: 6,\n    fontWeight: \"bold\",\n    minWidth: 0,\n  };\n  return (\n    <Grid container={true} alignItems=\"center\">\n      <Grid item={true} xs style={{ overflow: \"auto\" }}>\n        <Box mb={2}>\n          <Paper elevation={2}>\n            <Box p={2}>{children}</Box>\n          </Paper>\n        </Box>\n      </Grid>\n\n      {hasToolbar && (\n        <Grid item={true}>\n          {(hasMoveUp || hasMoveDown) && (\n            <MoveUpButton\n              style={btnStyle}\n              disabled={disabled || readonly || !hasMoveUp}\n              onClick={onReorderClick(index, index - 1)}\n              uiSchema={uiSchema}\n            />\n          )}\n          {(hasMoveUp || hasMoveDown) && (\n            <MoveDownButton\n              style={btnStyle}\n              disabled={disabled || readonly || !hasMoveDown}\n              onClick={onReorderClick(index, index + 1)}\n              uiSchema={uiSchema}\n            />\n          )}\n          {hasRemove && (\n            <RemoveButton\n              style={btnStyle}\n              disabled={disabled || readonly}\n              onClick={onDropIndexClick(index)}\n              uiSchema={uiSchema}\n            />\n          )}\n        </Grid>\n      )}\n    </Grid>\n  );\n};\n\nexport default ArrayFieldItemTemplate;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport {\n  ArrayFieldTemplateItemType,\n  ArrayFieldTemplateProps,\n  getTemplate,\n  getUiOptions,\n} from \"@rjsf/utils\";\n\nconst ArrayFieldTemplate = (props: ArrayFieldTemplateProps) => {\n  const {\n    canAdd,\n    disabled,\n    idSchema,\n    uiSchema,\n    items,\n    onAddClick,\n    readonly,\n    registry,\n    required,\n    schema,\n    title,\n  } = props;\n  const uiOptions = getUiOptions(uiSchema);\n  const ArrayFieldDescriptionTemplate =\n    getTemplate<\"ArrayFieldDescriptionTemplate\">(\n      \"ArrayFieldDescriptionTemplate\",\n      registry,\n      uiOptions\n    );\n  const ArrayFieldItemTemplate = getTemplate<\"ArrayFieldItemTemplate\">(\n    \"ArrayFieldItemTemplate\",\n    registry,\n    uiOptions\n  );\n  const ArrayFieldTitleTemplate = getTemplate<\"ArrayFieldTitleTemplate\">(\n    \"ArrayFieldTitleTemplate\",\n    registry,\n    uiOptions\n  );\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <Paper elevation={2}>\n      <Box p={2}>\n        <ArrayFieldTitleTemplate\n          idSchema={idSchema}\n          title={uiOptions.title || title}\n          schema={schema}\n          uiSchema={uiSchema}\n          required={required}\n          registry={registry}\n        />\n        <ArrayFieldDescriptionTemplate\n          idSchema={idSchema}\n          description={uiOptions.description || schema.description}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n        <Grid container={true} key={`array-item-list-${idSchema.$id}`}>\n          {items &&\n            items.map(({ key, ...itemProps }: ArrayFieldTemplateItemType) => (\n              <ArrayFieldItemTemplate key={key} {...itemProps} />\n            ))}\n          {canAdd && (\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item={true}>\n                <Box mt={2}>\n                  <AddButton\n                    className=\"array-item-add\"\n                    onClick={onAddClick}\n                    disabled={disabled || readonly}\n                    uiSchema={uiSchema}\n                  />\n                </Box>\n              </Grid>\n            </Grid>\n          )}\n        </Grid>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default ArrayFieldTemplate;\n","import React from \"react\";\nimport TextField, { TextFieldProps } from \"@material-ui/core/TextField\";\nimport { getInputProps, WidgetProps } from \"@rjsf/utils\";\n\nconst BaseInputTemplate = ({\n  id,\n  placeholder,\n  required,\n  readonly,\n  disabled,\n  type,\n  label,\n  value,\n  onChange,\n  onBlur,\n  onFocus,\n  autofocus,\n  options,\n  schema,\n  uiSchema,\n  rawErrors = [],\n  formContext,\n  registry,\n  ...textFieldProps\n}: WidgetProps) => {\n  const inputProps = getInputProps(schema, type, options);\n  // Now we need to pull out the step, min, max into an inner `inputProps` for material-ui\n  const { step, min, max, ...rest } = inputProps;\n  const otherProps = {\n    inputProps: {\n      step,\n      min,\n      max,\n      ...(schema.examples ? { list: `examples_${id}` } : undefined),\n    },\n    ...rest,\n  };\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<HTMLInputElement>) =>\n    onChange(value === \"\" ? options.emptyValue : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  const { schemaUtils } = registry;\n  const displayLabel = schemaUtils.getDisplayLabel(schema, uiSchema);\n\n  return (\n    <>\n      <TextField\n        id={id}\n        name={id}\n        placeholder={placeholder}\n        label={displayLabel ? label || schema.title : false}\n        autoFocus={autofocus}\n        required={required}\n        disabled={disabled || readonly}\n        {...otherProps}\n        value={value || value === 0 ? value : \"\"}\n        error={rawErrors.length > 0}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        {...(textFieldProps as TextFieldProps)}\n      />\n      {schema.examples && (\n        <datalist id={`examples_${id}`}>\n          {(schema.examples as string[])\n            .concat(schema.default ? ([schema.default] as string[]) : [])\n            .map((example: any) => {\n              return <option key={example} value={example} />;\n            })}\n        </datalist>\n      )}\n    </>\n  );\n};\n\nexport default BaseInputTemplate;\n","import React from \"react\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { IconButtonProps } from \"@rjsf/utils\";\n\nconst AddButton: React.ComponentType<IconButtonProps> = ({\n  uiSchema,\n  ...props\n}) => {\n  return (\n    <IconButton title=\"Add Item\" {...props} color=\"primary\">\n      <AddIcon />\n    </IconButton>\n  );\n};\n\nexport default AddButton;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport { SubmitButtonProps, getSubmitButtonOptions } from \"@rjsf/utils\";\n\nconst SubmitButton: React.ComponentType<SubmitButtonProps> = (props) => {\n  const {\n    submitText,\n    norender,\n    props: submitButtonProps,\n  } = getSubmitButtonOptions(props.uiSchema);\n  if (norender) {\n    return null;\n  }\n  return (\n    <Box marginTop={3}>\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"primary\"\n        {...submitButtonProps}\n      >\n        {submitText}\n      </Button>\n    </Box>\n  );\n};\n\nexport default SubmitButton;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { DescriptionFieldProps } from \"@rjsf/utils\";\n\nconst DescriptionField = ({ id, description }: DescriptionFieldProps) => {\n  if (description) {\n    return (\n      <Typography id={id} variant=\"subtitle2\" style={{ marginTop: \"5px\" }}>\n        {description}\n      </Typography>\n    );\n  }\n\n  return null;\n};\n\nexport default DescriptionField;\n","import React from \"react\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport Box from \"@material-ui/core/Box\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { ErrorListProps } from \"@rjsf/utils\";\n\nconst ErrorList = ({ errors }: ErrorListProps) => {\n  return (\n    <Paper elevation={2}>\n      <Box mb={2} p={2}>\n        <Typography variant=\"h6\">Errors</Typography>\n        <List dense={true}>\n          {errors.map((error, i: number) => {\n            return (\n              <ListItem key={i}>\n                <ListItemIcon>\n                  <ErrorIcon color=\"error\" />\n                </ListItemIcon>\n                <ListItemText primary={error.stack} />\n              </ListItem>\n            );\n          })}\n        </List>\n      </Box>\n    </Paper>\n  );\n};\n\nexport default ErrorList;\n","import React from \"react\";\nimport { FieldErrorProps } from \"@rjsf/utils\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport List from \"@material-ui/core/List\";\n\n/** The `FieldErrorTemplate` component renders the errors local to the particular field\n *\n * @param props - The `FieldErrorProps` for the errors being rendered\n */\nexport default function FieldErrorTemplate(props: FieldErrorProps) {\n  const { errors = [], idSchema } = props;\n  if (errors.length === 0) {\n    return null;\n  }\n  const id = `${idSchema.$id}__error`;\n\n  return (\n    <List dense={true} disablePadding={true}>\n      {errors.map((error, i: number) => {\n        return (\n          <ListItem key={i} disableGutters={true}>\n            <FormHelperText id={id}>{error}</FormHelperText>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n}\n","import React from \"react\";\nimport { FieldHelpProps } from \"@rjsf/utils\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\n\n/** The `FieldHelpTemplate` component renders any help desired for a field\n *\n * @param props - The `FieldHelpProps` to be rendered\n */\nexport default function FieldHelpTemplate(props: FieldHelpProps) {\n  const { idSchema, help } = props;\n  if (!help) {\n    return null;\n  }\n  const id = `${idSchema.$id}__help`;\n  return <FormHelperText id={id}>{help}</FormHelperText>;\n}\n","import React from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { FieldTemplateProps, getTemplate, getUiOptions } from \"@rjsf/utils\";\n\nconst FieldTemplate = ({\n  id,\n  children,\n  classNames,\n  disabled,\n  displayLabel,\n  hidden,\n  label,\n  onDropPropertyClick,\n  onKeyChange,\n  readonly,\n  required,\n  rawErrors = [],\n  errors,\n  help,\n  rawDescription,\n  schema,\n  uiSchema,\n  registry,\n}: FieldTemplateProps) => {\n  const uiOptions = getUiOptions(uiSchema);\n  const WrapIfAdditionalTemplate = getTemplate<\"WrapIfAdditionalTemplate\">(\n    \"WrapIfAdditionalTemplate\",\n    registry,\n    uiOptions\n  );\n\n  if (hidden) {\n    return <div style={{ display: \"none\" }}>{children}</div>;\n  }\n  return (\n    <WrapIfAdditionalTemplate\n      classNames={classNames}\n      disabled={disabled}\n      id={id}\n      label={label}\n      onDropPropertyClick={onDropPropertyClick}\n      onKeyChange={onKeyChange}\n      readonly={readonly}\n      required={required}\n      schema={schema}\n      uiSchema={uiSchema}\n      registry={registry}\n    >\n      <FormControl\n        fullWidth={true}\n        error={rawErrors.length ? true : false}\n        required={required}\n      >\n        {children}\n        {displayLabel && rawDescription ? (\n          <Typography variant=\"caption\" color=\"textSecondary\">\n            {rawDescription}\n          </Typography>\n        ) : null}\n        {errors}\n        {help}\n      </FormControl>\n    </WrapIfAdditionalTemplate>\n  );\n};\n\nexport default FieldTemplate;\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {\n  ObjectFieldTemplateProps,\n  canExpand,\n  getTemplate,\n  getUiOptions,\n} from \"@rjsf/utils\";\n\nconst ObjectFieldTemplate = ({\n  description,\n  title,\n  properties,\n  required,\n  disabled,\n  readonly,\n  uiSchema,\n  idSchema,\n  schema,\n  formData,\n  onAddClick,\n  registry,\n}: ObjectFieldTemplateProps) => {\n  const uiOptions = getUiOptions(uiSchema);\n  const TitleFieldTemplate = getTemplate<\"TitleFieldTemplate\">(\n    \"TitleFieldTemplate\",\n    registry,\n    uiOptions\n  );\n  const DescriptionFieldTemplate = getTemplate<\"DescriptionFieldTemplate\">(\n    \"DescriptionFieldTemplate\",\n    registry,\n    uiOptions\n  );\n  // Button templates are not overridden in the uiSchema\n  const {\n    ButtonTemplates: { AddButton },\n  } = registry.templates;\n  return (\n    <>\n      {(uiOptions.title || title) && (\n        <TitleFieldTemplate\n          id={`${idSchema.$id}-title`}\n          title={title}\n          required={required}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      {(uiOptions.description || description) && (\n        <DescriptionFieldTemplate\n          id={`${idSchema.$id}-description`}\n          description={uiOptions.description || description!}\n          schema={schema}\n          uiSchema={uiSchema}\n          registry={registry}\n        />\n      )}\n      <Grid container={true} spacing={2} style={{ marginTop: \"10px\" }}>\n        {properties.map((element, index) =>\n          // Remove the <Grid> if the inner element is hidden as the <Grid>\n          // itself would otherwise still take up space.\n          element.hidden ? (\n            element.content\n          ) : (\n            <Grid\n              item={true}\n              xs={12}\n              key={index}\n              style={{ marginBottom: \"10px\" }}\n            >\n              {element.content}\n            </Grid>\n          )\n        )}\n        {canExpand(schema, uiSchema, formData) && (\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item={true}>\n              <AddButton\n                className=\"object-property-expand\"\n                onClick={onAddClick(schema)}\n                disabled={disabled || readonly}\n                uiSchema={uiSchema}\n              />\n            </Grid>\n          </Grid>\n        )}\n      </Grid>\n    </>\n  );\n};\n\nexport default ObjectFieldTemplate;\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { TitleFieldProps } from \"@rjsf/utils\";\n\nconst TitleField = ({ id, title }: TitleFieldProps) => {\n  return (\n    <Box id={id} mb={1} mt={1}>\n      <Typography variant=\"h5\">{title}</Typography>\n      <Divider />\n    </Box>\n  );\n};\n\nexport default TitleField;\n","import React, { CSSProperties } from \"react\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Grid from \"@material-ui/core/Grid\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport {\n  ADDITIONAL_PROPERTY_FLAG,\n  WrapIfAdditionalTemplateProps,\n} from \"@rjsf/utils\";\n\nconst WrapIfAdditionalTemplate = ({\n  children,\n  classNames,\n  disabled,\n  id,\n  label,\n  onDropPropertyClick,\n  onKeyChange,\n  readonly,\n  required,\n  schema,\n  uiSchema,\n  registry,\n}: WrapIfAdditionalTemplateProps) => {\n  // Button templates are not overridden in the uiSchema\n  const { RemoveButton } = registry.templates.ButtonTemplates;\n  const keyLabel = `${label} Key`; // i18n ?\n  const additional = ADDITIONAL_PROPERTY_FLAG in schema;\n  const btnStyle: CSSProperties = {\n    flex: 1,\n    paddingLeft: 6,\n    paddingRight: 6,\n    fontWeight: \"bold\",\n  };\n\n  if (!additional) {\n    return <div className={classNames}>{children}</div>;\n  }\n\n  const handleBlur = ({ target }: React.FocusEvent<HTMLInputElement>) =>\n    onKeyChange(target.value);\n\n  return (\n    <Grid\n      container\n      key={`${id}-key`}\n      alignItems=\"center\"\n      spacing={2}\n      className={classNames}\n    >\n      <Grid item xs>\n        <FormControl fullWidth={true} required={required}>\n          <InputLabel>{keyLabel}</InputLabel>\n          <Input\n            defaultValue={label}\n            disabled={disabled || readonly}\n            id={`${id}-key`}\n            name={`${id}-key`}\n            onBlur={!readonly ? handleBlur : undefined}\n            type=\"text\"\n          />\n        </FormControl>\n      </Grid>\n      <Grid item={true} xs>\n        {children}\n      </Grid>\n      <Grid item={true}>\n        <RemoveButton\n          iconType=\"default\"\n          style={btnStyle}\n          disabled={disabled || readonly}\n          onClick={onDropPropertyClick(label)}\n          uiSchema={uiSchema}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default WrapIfAdditionalTemplate;\n","import CheckboxWidget from \"../CheckboxWidget/CheckboxWidget\";\nimport CheckboxesWidget from \"../CheckboxesWidget/CheckboxesWidget\";\nimport DateWidget from \"../DateWidget/DateWidget\";\nimport DateTimeWidget from \"../DateTimeWidget/DateTimeWidget\";\nimport RadioWidget from \"../RadioWidget/RadioWidget\";\nimport RangeWidget from \"../RangeWidget/RangeWidget\";\nimport SelectWidget from \"../SelectWidget/SelectWidget\";\nimport TextareaWidget from \"../TextareaWidget/TextareaWidget\";\n\nexport default {\n  CheckboxWidget,\n  CheckboxesWidget,\n  DateWidget,\n  DateTimeWidget,\n  RadioWidget,\n  RangeWidget,\n  SelectWidget,\n  TextareaWidget,\n};\n","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { schemaRequiresTrueValue, WidgetProps } from \"@rjsf/utils\";\n\nconst CheckboxWidget = (props: WidgetProps) => {\n  const {\n    schema,\n    id,\n    value,\n    disabled,\n    readonly,\n    label,\n    autofocus,\n    onChange,\n    onBlur,\n    onFocus,\n  } = props;\n  // Because an unchecked checkbox will cause html5 validation to fail, only add\n  // the \"required\" attribute if the field value must be \"true\", due to the\n  // \"const\" or \"enum\" keywords\n  const required = schemaRequiresTrueValue(schema);\n\n  const _onChange = (_: any, checked: boolean) => onChange(checked);\n  const _onBlur = ({\n    target: { value },\n  }: React.FocusEvent<HTMLButtonElement>) => onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLButtonElement>) => onFocus(id, value);\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox\n          id={id}\n          name={id}\n          checked={typeof value === \"undefined\" ? false : Boolean(value)}\n          required={required}\n          disabled={disabled || readonly}\n          autoFocus={autofocus}\n          onChange={_onChange}\n          onBlur={_onBlur}\n          onFocus={_onFocus}\n        />\n      }\n      label={label || \"\"}\n    />\n  );\n};\n\nexport default CheckboxWidget;\n","import React from \"react\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { WidgetProps } from \"@rjsf/utils\";\n\nconst selectValue = (value: any, selected: any, all: any) => {\n  const at = all.indexOf(value);\n  const updated = selected.slice(0, at).concat(value, selected.slice(at));\n\n  // As inserting values at predefined index positions doesn't work with empty\n  // arrays, we need to reorder the updated selection to match the initial order\n  return updated.sort((a: any, b: any) => all.indexOf(a) > all.indexOf(b));\n};\n\nconst deselectValue = (value: any, selected: any) => {\n  return selected.filter((v: any) => v !== value);\n};\n\nconst CheckboxesWidget = ({\n  schema,\n  label,\n  id,\n  disabled,\n  options,\n  value,\n  autofocus,\n  readonly,\n  required,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled, inline } = options;\n\n  const _onChange =\n    (option: any) =>\n    ({ target: { checked } }: React.ChangeEvent<HTMLInputElement>) => {\n      const all = (enumOptions as any).map(({ value }: any) => value);\n\n      if (checked) {\n        onChange(selectValue(option.value, value, all));\n      } else {\n        onChange(deselectValue(option.value, value));\n      }\n    };\n\n  const _onBlur = ({\n    target: { value },\n  }: React.FocusEvent<HTMLButtonElement>) => onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLButtonElement>) => onFocus(id, value);\n\n  return (\n    <>\n      <FormLabel required={required} htmlFor={id}>\n        {label || schema.title}\n      </FormLabel>\n      <FormGroup id={id} row={!!inline}>\n        {Array.isArray(enumOptions) &&\n          enumOptions.map((option, index: number) => {\n            const checked = value.indexOf(option.value) !== -1;\n            const itemDisabled =\n              Array.isArray(enumDisabled) &&\n              enumDisabled.indexOf(option.value) !== -1;\n            const checkbox = (\n              <Checkbox\n                id={`${id}-${option.value}`}\n                name={id}\n                checked={checked}\n                disabled={disabled || itemDisabled || readonly}\n                autoFocus={autofocus && index === 0}\n                onChange={_onChange(option)}\n                onBlur={_onBlur}\n                onFocus={_onFocus}\n              />\n            );\n            return (\n              <FormControlLabel\n                control={checkbox}\n                key={option.value}\n                label={option.label}\n              />\n            );\n          })}\n      </FormGroup>\n    </>\n  );\n};\n\nexport default CheckboxesWidget;\n","import React from \"react\";\nimport { getTemplate, WidgetProps } from \"@rjsf/utils\";\n\nconst DateWidget = (props: WidgetProps) => {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\">(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  return (\n    <BaseInputTemplate\n      type=\"date\"\n      InputLabelProps={{\n        shrink: true,\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default DateWidget;\n","import React from \"react\";\nimport { getTemplate, localToUTC, utcToLocal, WidgetProps } from \"@rjsf/utils\";\n\nconst DateTimeWidget = (props: WidgetProps) => {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\">(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n  const value = utcToLocal(props.value);\n  const onChange = (value: any) => {\n    props.onChange(localToUTC(value));\n  };\n\n  return (\n    <BaseInputTemplate\n      type=\"datetime-local\"\n      InputLabelProps={{\n        shrink: true,\n      }}\n      {...props}\n      value={value}\n      onChange={onChange}\n    />\n  );\n};\n\nexport default DateTimeWidget;\n","import React from \"react\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport { WidgetProps } from \"@rjsf/utils\";\n\nconst RadioWidget = ({\n  id,\n  schema,\n  options,\n  value,\n  required,\n  disabled,\n  readonly,\n  label,\n  onChange,\n  onBlur,\n  onFocus,\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled } = options;\n\n  const _onChange = (_: any, value: any) =>\n    onChange(schema.type == \"boolean\" ? value !== \"false\" : value);\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  const row = options ? options.inline : false;\n\n  return (\n    <>\n      <FormLabel required={required} htmlFor={id}>\n        {label || schema.title}\n      </FormLabel>\n      <RadioGroup\n        id={id}\n        name={id}\n        value={`${value}`}\n        row={row as boolean}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n      >\n        {Array.isArray(enumOptions) &&\n          enumOptions.map((option) => {\n            const itemDisabled =\n              Array.isArray(enumDisabled) &&\n              enumDisabled.indexOf(option.value) !== -1;\n            const radio = (\n              <FormControlLabel\n                control={\n                  <Radio\n                    name={id}\n                    id={`${id}-${option.value}`}\n                    color=\"primary\"\n                  />\n                }\n                label={`${option.label}`}\n                value={`${option.value}`}\n                key={option.value}\n                disabled={disabled || itemDisabled || readonly}\n              />\n            );\n\n            return radio;\n          })}\n      </RadioGroup>\n    </>\n  );\n};\n\nexport default RadioWidget;\n","import React from \"react\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { WidgetProps, rangeSpec } from \"@rjsf/utils\";\n\nconst RangeWidget = ({\n  value,\n  readonly,\n  disabled,\n  onBlur,\n  onFocus,\n  options,\n  schema,\n  onChange,\n  required,\n  label,\n  id,\n}: WidgetProps) => {\n  const sliderProps = { value, label, id, name: id, ...rangeSpec(schema) };\n\n  const _onChange = (_: any, value?: number | number[]) => {\n    onChange(value ? options.emptyValue : value);\n  };\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, value);\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) => onFocus(id, value);\n\n  return (\n    <>\n      <FormLabel required={required} id={id}>\n        {label}\n      </FormLabel>\n      <Slider\n        disabled={disabled || readonly}\n        onChange={_onChange}\n        onBlur={_onBlur}\n        onFocus={_onFocus}\n        valueLabelDisplay=\"auto\"\n        {...sliderProps}\n      />\n    </>\n  );\n};\n\nexport default RangeWidget;\n","import React from \"react\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { WidgetProps, processSelectValue } from \"@rjsf/utils\";\n\nconst SelectWidget = ({\n  schema,\n  id,\n  options,\n  label,\n  required,\n  disabled,\n  readonly,\n  value,\n  multiple,\n  autofocus,\n  onChange,\n  onBlur,\n  onFocus,\n  rawErrors = [],\n}: WidgetProps) => {\n  const { enumOptions, enumDisabled } = options;\n\n  const emptyValue = multiple ? [] : \"\";\n\n  const _onChange = ({\n    target: { value },\n  }: React.ChangeEvent<{ name?: string; value: unknown }>) =>\n    onChange(processSelectValue(schema, value, options));\n  const _onBlur = ({ target: { value } }: React.FocusEvent<HTMLInputElement>) =>\n    onBlur(id, processSelectValue(schema, value, options));\n  const _onFocus = ({\n    target: { value },\n  }: React.FocusEvent<HTMLInputElement>) =>\n    onFocus(id, processSelectValue(schema, value, options));\n\n  return (\n    <TextField\n      id={id}\n      name={id}\n      label={label || schema.title}\n      select\n      value={typeof value === \"undefined\" ? emptyValue : value}\n      required={required}\n      disabled={disabled || readonly}\n      autoFocus={autofocus}\n      error={rawErrors.length > 0}\n      onChange={_onChange}\n      onBlur={_onBlur}\n      onFocus={_onFocus}\n      InputLabelProps={{\n        shrink: true,\n      }}\n      SelectProps={{\n        multiple: typeof multiple === \"undefined\" ? false : multiple,\n      }}\n    >\n      {(enumOptions as any).map(({ value, label }: any, i: number) => {\n        const disabled: any =\n          enumDisabled && (enumDisabled as any).indexOf(value) != -1;\n        return (\n          <MenuItem key={i} value={value} disabled={disabled}>\n            {label}\n          </MenuItem>\n        );\n      })}\n    </TextField>\n  );\n};\n\nexport default SelectWidget;\n","import React from \"react\";\nimport { getTemplate, WidgetProps } from \"@rjsf/utils\";\n\nconst TextareaWidget = (props: WidgetProps) => {\n  const { options, registry } = props;\n  const BaseInputTemplate = getTemplate<\"BaseInputTemplate\">(\n    \"BaseInputTemplate\",\n    registry,\n    options\n  );\n\n  let rows: string | number = 5;\n  if (typeof options.rows === \"string\" || typeof options.rows === \"number\") {\n    rows = options.rows;\n  }\n\n  return <BaseInputTemplate {...props} multiline rows={rows} />;\n};\n\nexport default TextareaWidget;\n","import { ThemeProps } from \"@rjsf/core\";\n\nimport Templates from \"../Templates\";\nimport Widgets from \"../Widgets\";\n\nconst Theme: ThemeProps = {\n  templates: Templates,\n  widgets: Widgets,\n};\n\nexport default Theme;\n","import { ComponentType } from \"react\";\nimport { withTheme, FormProps } from \"@rjsf/core\";\n\nimport Theme from \"../Theme\";\n\nconst MuiForm: ComponentType<FormProps> = withTheme(Theme);\n\nexport default MuiForm;\n"],"names":["MuiIconButton","props","icon","color","uiSchema","otherProps","React","createElement","IconButton","size","Templates","ArrayFieldItemTemplate","children","disabled","hasToolbar","hasMoveDown","hasMoveUp","hasRemove","index","onDropIndexClick","onReorderClick","readonly","registry","MoveDownButton","MoveUpButton","RemoveButton","templates","ButtonTemplates","btnStyle","flex","paddingLeft","paddingRight","fontWeight","minWidth","Grid","container","alignItems","item","xs","style","overflow","Box","mb","Paper","elevation","p","onClick","ArrayFieldTemplate","canAdd","idSchema","items","onAddClick","required","schema","title","uiOptions","getUiOptions","ArrayFieldDescriptionTemplate","getTemplate","ArrayFieldTitleTemplate","AddButton","description","key","$id","map","_ref","itemProps","justifyContent","mt","className","BaseInputTemplate","id","placeholder","type","label","value","onChange","onBlur","onFocus","autofocus","options","rawErrors","formContext","textFieldProps","inputProps","getInputProps","step","min","max","rest","examples","list","undefined","schemaUtils","displayLabel","getDisplayLabel","Fragment","TextField","name","autoFocus","error","length","_ref2","target","emptyValue","_ref3","_ref4","concat","default","example","AddIcon","ArrowDownwardIcon","fontSize","ArrowUpwardIcon","iconType","RemoveIcon","SubmitButton","submitText","norender","submitButtonProps","getSubmitButtonOptions","marginTop","Button","variant","DescriptionFieldTemplate","Typography","ErrorListTemplate","errors","List","dense","i","ListItem","ListItemIcon","ErrorIcon","ListItemText","primary","stack","FieldErrorTemplate","disablePadding","disableGutters","FormHelperText","FieldHelpTemplate","help","FieldTemplate","classNames","hidden","onDropPropertyClick","onKeyChange","rawDescription","WrapIfAdditionalTemplate","display","FormControl","fullWidth","ObjectFieldTemplate","properties","formData","TitleFieldTemplate","spacing","element","content","marginBottom","canExpand","Divider","ADDITIONAL_PROPERTY_FLAG","InputLabel","Input","defaultValue","Widgets","CheckboxWidget","schemaRequiresTrueValue","FormControlLabel","control","Checkbox","checked","Boolean","_","CheckboxesWidget","enumOptions","enumDisabled","inline","_onChange","option","all","selected","at","indexOf","slice","sort","a","b","selectValue","filter","v","deselectValue","_onBlur","_onFocus","_ref5","FormLabel","htmlFor","FormGroup","row","Array","isArray","itemDisabled","checkbox","DateWidget","InputLabelProps","shrink","DateTimeWidget","utcToLocal","localToUTC","RadioWidget","RadioGroup","Radio","RangeWidget","sliderProps","rangeSpec","Slider","valueLabelDisplay","SelectWidget","multiple","select","processSelectValue","SelectProps","MenuItem","TextareaWidget","rows","multiline","Theme","widgets","MuiForm","withTheme"],"mappings":"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"}